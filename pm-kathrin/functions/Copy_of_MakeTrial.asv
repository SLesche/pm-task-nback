
% This function generates a trial list from the specified Trial
% configurations in the expinfo. Alternatively, we can specify the Trial
% configurations here if there is more complex things to do...

function [Trial] = MakeTrial(expinfo, isPractice, PMWord)
%% specify Trial configurations
clear all
expinfo.subject = 1;
isPractice = 1;

expinfo.word_prac = {'FOCAL_1' 'FOCAL_2'};
if mod(expinfo.subject, 2) == 1
    expinfo.cond = 1;
    expinfo.condition = 'focal';
    expinfo.word_PM_exp = {'FOCAL_1' 'FOCAL_2' 'FOCAL_1' 'FOCAL_2' 'FOCAL_1' 'FOCAL_2' 'FOCAL_1' 'FOCAL_2'};
else
    expinfo.cond = 2;
    expinfo.condition = 'non focal';
    expinfo.word_PM_exp = {'FOCAL_1' 'FOCAL_2' 'FOCAL_3' 'FOCAL_4' 'FOCAL_5' 'FOCAL_6' 'FOCAL_7' 'FOCAL_8'};
end

%% Specify Response Keys used in the experiment
expinfo.AbortKey = 'ESCAPE';
expinfo.PMKey = 'F1';
expinfo.RespKeys = {'F1' 'l' 'd'};

if mod(expinfo.subject, 4) == 1 || mod(expinfo.subject, 4) == 2
    expinfo.matchKey = 'd';
    expinfo.nomatchKey = 'l';
    expinfo.InstFolder_Nback      = 'Instructions_Nback_A/';
elseif mod(expinfo.subject, 4) == 3 || mod(expinfo.subject, 4) == 0
    expinfo.matchKey = 'l';
    expinfo.nomatchKey = 'd';
    expinfo.InstFolder_Nback      = 'Instructions_Nback_A/';
end

%% Defining trials to be conducted
% Specify how many trials should be conducted
expinfo.nTrials = 168;
expinfo.nPracTrials = 42;
expinfo.blocknum = 8;
expinfo.prac_blocknum = 2;

expinfo.blockend = [21:21:168];
expinfo.PMback = 5; 
expinfo.nback = 3; 
expinfo.match_per_block = 4;

% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

rng(expinfo.subject  + isPractice);

if isPractice == 1
    Wordlist = readtable('Words_long.xlsx','Format','auto');
    Words = repmat(Wordlist.Words,1,1);
    nTrials = expinfo.nPracTrials;
    nMatches = expinfo.prac_blocknum * expinfo.match_per_block;
else
    Wordlist = readtable('Words_long.xlsx','Format','auto');
    Words = repmat(Wordlist.Words,2,1);
    nTrials = expinfo.nTrials;
    nMatches = expinfo.blocknum * expinfo.match_per_block;
end


% create PM trials
Match = zeros(nTrials, 1);
Positions = (expinfo.nback+1):nTrials-2;

% create settings for PM task
PM          = expinfo.blockend- randsample(0:expinfo.PMback,length(expinfo.blockend), true);
PMtask      = zeros(nTrials, 1);
PMnum       = zeros(nTrials, 1);
PMtask(PM)  = 1;
PMnum(PM)   = 1:length(PM);

% get positions for matches in Nback task
% nMatches = round(nTrials / 3)-expinfo.nPM;
Positions= Positions(~ismember(Positions, [PM PM+2]));
matchPositions = randsample(Positions, nMatches);  % Randomly pick positions for the ones
Match(matchPositions) = 1;
matchPositions_sorted = sort(matchPositions);

% initialize trial strcuture
for trial = 1: nTrials
    Trial(trial).participant = expinfo.subject; % subject id
    Trial(trial).TrialNum = trial; % trial number
    Trial(trial).Match = Match(trial); % is current trial match
    Trial(trial).PMtask = PMtask(trial); % is current trial PM task
    Trial(trial).PMnum = PMnum(trial); % is current trial PM task
    if Trial(trial).Match == 0 && Trial(trial).PMtask == 1 % PM task
        Trial(trial).Stim = expinfo.word_PM_exp{PMnum(trial)};
    elseif Trial(trial).Match == 0 && Trial(trial).PMtask == 0 % no PM task and no match
        rowIdx = randsample(height(Words), 1); % Get a random row index
        Trial(trial).Stim = Words{rowIdx};
        Words(rowIdx, :) = []; % Remove the row from the table
    elseif Trial(trial).Match == 1 && Trial(trial).PMtask == 0 % no PM task and  match
        Trial(trial).Stim = Trial(trial-expinfo.nback).Stim;
    end

    % add correct response
    if isPractice ==0
        Trial(trial).Prac = 1;

        if Trial(trial).Match == 1 && Trial(trial).PMtask ==0
            Trial(trial).CorResp = expinfo.matchKey;
        elseif Trial(trial).Match == 0 && Trial(trial).PMtask ==0
            Trial(trial).CorResp = expinfo.nomatchKey;
        elseif  Trial(trial).PMtask ==1
            Trial(trial).CorResp = expinfo.PMKey ;
        end
        Trial(trial).PM1 = PM(1); % trial number PM
        Trial(trial).PM2 = PM(2); % trial number PM
        Trial(trial).PM3 = PM(3); % trial number PM
        Trial(trial).PM4 = PM(4); % trial number PM
        Trial(trial).PM5 = PM(5); % trial number PM
        Trial(trial).PM6 = PM(6); % trial number PM
        Trial(trial).PM7 = PM(7); % trial number PM
        Trial(trial).PM8 = PM(8); % trial number PM
    else
        Trial(trial).Prac = 0;

        if Trial(trial).Match == 1
            Trial(trial).CorResp = expinfo.matchKey;
        elseif Trial(trial).Match == 0
            Trial(trial).CorResp = expinfo.nomatchKey;
        end
        Trial(trial).PM1 = PM(1); % trial number PM 
        Trial(trial).PM2 = PM(2); % trial number PM
        Trial(trial).PM3 = 0; % trial number PM
        Trial(trial).PM4 = 0; % trial number PM
        Trial(trial).PM5 = 0; % trial number PM
        Trial(trial).PM6 = 0; % trial number PM
        Trial(trial).PM7 = 0; % trial number PM
        Trial(trial).PM8 = 0; % trial number PM
    end
        
end

%Informationen einbauen
for trial = 1: nTrials
    if isPractice == 1
        Trial(trial).TaskDescription = 'PM_Nback_prac';
    else
        Trial(trial).TaskDescription = 'PM_Nback_exp';
    end
    Trial(trial).Subject = expinfo.subject;
    if expinfo.cond == 1
        Trial(trial).PMcondition = 'focal';
    else
        Trial(trial).PMcondition = 'nonfocal';
    end
    Trial(trial).ISI = 0.5;
    Trial(trial).Cue = 0.5;
    Trial(trial).StimDuration =1 ;
    Trial(trial).Fix =1 ;

end


end
